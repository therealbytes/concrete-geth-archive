// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

{{if .ImportPaths}}
{{- range .ImportPaths }}import "{{.}}";
{{end}}
{{- end }}
library {{.Name}} {
    address constant precompileAddress = address({{.Address}});
    {{- range .Methods }}

    function {{.Name}}({{.Inputs}}) internal{{if .IsStatic}} view{{end}}{{if .Outputs}} returns ({{.Outputs}}){{end}} {
        (bool success, {{if .Outputs}}bytes memory data{{end}}) = precompileAddress.{{if .IsStatic}}staticcall{{else}}call{{end}}(
            abi.encodeWithSignature("{{.Signature}}"{{if .InputNames}}, {{.InputNames}}{{end}})
        );
        require(success);
        {{- if .Outputs }}
        return abi.decode(data, ({{.OutputTypes}}));
        {{- end }}
    }
    {{- end }}
}
